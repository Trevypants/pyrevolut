# This workflow will install Python dependencies and run tests with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Test Integration

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize

jobs:
  test:
    strategy:
      max-parallel: 1
      matrix:
          os: [
            ubuntu-latest, 
            # windows-latest, 
            macos-latest
          ]
          python-version: [3.11]
    defaults:
      run:
        shell: bash

    runs-on: ${{ matrix.os }}

    environment: ${{ github.base_ref }}

    steps:
      #----------------------------------------------
      #   ----------- check-out repo  ------------
      #----------------------------------------------
      - uses: actions/checkout@v4

      #----------------------------------------------
      #   ------------  setup python  -----------
      #----------------------------------------------
      - name: ğŸ”§ Setup Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: ğŸ“œ Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------
      #  -----  load cached venv  ----- 
      #----------------------------------
      - name: Load cached venv
        id: cached-pip-wheels
        uses: actions/cache@v3
        with:
          path: ~/.cache
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      #----------------------------------------------
      #   ------------  install deps  ------------
      #----------------------------------------------
      - name: Install dependencies
        run: |
          poetry install --no-interaction

      #-----------------------------------------------
      #   ------------- run test suite ------------
      #-----------------------------------------------
      - name: ğŸ§ª Run tests
        if: always()
        env:
          CREDENTIALS_JSON: ${{ secrets.PYTEST_CREDENTIALS }}
        run: |
          source $VENV
          echo $CREDENTIALS_JSON | base64 -di > ./tests/test_creds.json
          poetry run pytest